class C:[A] {
  \a{};
  [ 1 ];
  var int i,j;
  'a';
  true $ int;
  i++;
  i ? i : !i;
  ++i;
  union U { int i; }
  union V:[A] { int i; }
  if(i) i; else i;
  for(var int _i; _i < 1; ++_i);
  var int array[2];
  array[0];
  foreach(a : array);
  repeat(1);
  match i,2 {
    case 12 when 0:;
    case _,2 when 0:;
  } where var int b;
  enum E { zero };
  typedef int Int;
  new Object;
  spork { <<< __func__ >>>; };
  while(0){ <<< __func__ >>>; }
}

var C:[int] c;
