distinct float farad;
distinct float ohm;
distinct float freq;

class C {
  var int i;
}
#ifndef foo

operator farad ------ (farad lhs, farad rhs) {
  return lhs * rhs;
}

fun freq get_freq(ohm r, farad c) {
  return ((1/(2*pi*r*c*0.000 000 001)) ) $ freq ;
}
fun ohm get_res(freq f, farad c) {
  return (1/(2*pi*f*c*0.000 000 0001)) $ ohm;

}
fun farad get_cap(freq f, ohm r) {
  return (1/(2*pi*f*r*0.000 000 001)) $ farad;
}
get_freq(10 000, 221);
<<< "clown freq:", get_freq(100000, 3.3 $ farad) >>>;
<<< "freq:", get_freq(5 100, 47) >>>;
<<< "freq:", get_freq(3 300, 47) >>>;
<<< get_freq(10 000, 220) >>>;
<<< get_res(72.3432 $ freq, 220) >>>;
<<< get_cap(72.3432 $ freq, 10 000) >>>;
